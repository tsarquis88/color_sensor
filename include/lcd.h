#include <stdint.h>

#define SQUARE           0
#define ROUND            1

#define NO               0
#define YES              1

#define ON               1
#define OFF              0

#define DAT              1
#define CMD              0
/*
 *  Some colors definition
 */
#define White            0xFFFF
#define Black            0x0000
#define Grey             0xF7DE
#define Grey2            0x8430
#define Light_Grey       0xC618
#define Dark_Grey        0x8410
#define Pink             0xF81F
#define Purple           0x705A
#define Grey_Blue        0x5458
#define Blue             0x001F
#define Dark_Blue        0x01CF
#define Light_Blue       0x051F
#define Light_Blue_2     0x7D7C
#define Red              0xF800
#define Green            0x07E0
#define Cyan             0x7FFF
#define Yellow           0xFFE0
#define Orange           0xFC08

#define reset_pin (1<<25)
#define reset_port 0
#define rs_pin (1<<24)
#define rs_port 0
#define cs_lcd_pin (1<<26)
#define cs_lcd_port 0


#define res_x       319
#define res_y       239



/*
 * Public functions
 */

void config_lcd_pinsel();
void config_lcd_spi();
void TFT_reset();
void TFT_write_word(long int value);
void TFT_write(long int value, short mode);
void TFT_write_RAM_prepare();
void TFT_write_reg(long int cmd_value, long int data_value);
void TFT_init();
void TFT_set_display_address_window(uint16_t xs, uint16_t ys, uint16_t xe, uint16_t ye);
void TFT_set_cursor(long int x_pos, long int y_pos);
void TFT_fill(long int colour);
long int TFT_BGR2RGB(long int colour);
long int RGB565_converter(unsigned char r, unsigned char g, unsigned char b);
/*
 * Drawing methods
 */
void swap_values(long int *a, long int *b);
void Draw_Pixel(long int x_pos, long int y_pos, long int colour);
void Draw_Rectangle(long int x1, long int y1, long int x2, long int y2, short fill, unsigned char type, long int colour, long int back_colour);
void Draw_V_Line(long int x1, long int y1, long int y2, unsigned colour);
void Draw_H_Line(long int x1, long int x2, long int y1, unsigned colour);
void print_str(unsigned char x_pos, unsigned char y_pos, unsigned char font_size, unsigned long colour, char *ch);
void print_char(unsigned long x_pos, unsigned long y_pos, unsigned char font_size, unsigned long colour, char ch);
void Draw_Font_Pixel(unsigned long x_pos, unsigned long y_pos, unsigned long colour, unsigned char pixel_size);
void Draw_Triangle(long int x1, long int y1, long int x2, long int y2, long int x3, long int y3, short fill, long int colour);
void Draw_Line(long int x1, long int y1, long int x2, long int y2, long int colour);
void Draw_Circle(long int xc, long int yc, long int radius, short fill, long int colour);
void test_colours();
void test_2D_graphics();
/*
 * Chars, font and colors definition arrays
 */

static const int colors [18] ={
  White,Orange,Grey,Pink,Grey2,Light_Grey,Dark_Grey,
  Grey_Blue,Blue,Dark_Blue,Light_Blue,Light_Blue_2,
  Red,Green,Cyan,Yellow,Black,Purple};

static const unsigned char font[96][5] =
{
     {0x00, 0x00, 0x00, 0x00, 0x00} // 20
    ,{0x00, 0x00, 0x5F, 0x00, 0x00} // 21 !
    ,{0x00, 0x07, 0x00, 0x07, 0x00} // 22 "
    ,{0x14, 0x7F, 0x14, 0x7f, 0x14} // 23 #
    ,{0x24, 0x2A, 0x7F, 0x2A, 0x12} // 24 $
    ,{0x23, 0x13, 0x08, 0x64, 0x62} // 25 %
    ,{0x36, 0x49, 0x55, 0x22, 0x50} // 26 &
    ,{0x00, 0x05, 0x03, 0x00, 0x00} // 27 '
    ,{0x00, 0x1C, 0x22, 0x41, 0x00} // 28 (
    ,{0x00, 0x41, 0x22, 0x1C, 0x00} // 29 )
    ,{0x14, 0x08, 0x3E, 0x08, 0x14} // 2a *
    ,{0x08, 0x08, 0x3E, 0x08, 0x08} // 2b +
    ,{0x00, 0x50, 0x30, 0x00, 0x00} // 2c ,
    ,{0x08, 0x08, 0x08, 0x08, 0x08} // 2d -
    ,{0x00, 0x60, 0x60, 0x00, 0x00} // 2e .
    ,{0x20, 0x10, 0x08, 0x04, 0x02} // 2f /
    ,{0x3E, 0x51, 0x49, 0x45, 0x3E} // 30 0
    ,{0x00, 0x42, 0x7F, 0x40, 0x00} // 31 1
    ,{0x42, 0x61, 0x51, 0x49, 0x46} // 32 2
    ,{0x21, 0x41, 0x45, 0x4B, 0x31} // 33 3
    ,{0x18, 0x14, 0x12, 0x7F, 0x10} // 34 4
    ,{0x27, 0x45, 0x45, 0x45, 0x39} // 35 5
    ,{0x3C, 0x4a, 0x49, 0x49, 0x30} // 36 6
    ,{0x01, 0x71, 0x09, 0x05, 0x03} // 37 7
    ,{0x36, 0x49, 0x49, 0x49, 0x36} // 38 8
    ,{0x06, 0x49, 0x49, 0x29, 0x1E} // 39 9
    ,{0x00, 0x36, 0x36, 0x00, 0x00} // 3a :
    ,{0x00, 0x56, 0x36, 0x00, 0x00} // 3b ;
    ,{0x08, 0x14, 0x22, 0x41, 0x00} // 3c <
    ,{0x14, 0x14, 0x14, 0x14, 0x14} // 3d =
    ,{0x00, 0x41, 0x22, 0x14, 0x08} // 3e >
    ,{0x02, 0x01, 0x51, 0x09, 0x06} // 3f ?
    ,{0x32, 0x49, 0x79, 0x41, 0x3E} // 40 @
    ,{0x7E, 0x11, 0x11, 0x11, 0x7E} // 41 A
    ,{0x7F, 0x49, 0x49, 0x49, 0x36} // 42 B
    ,{0x3E, 0x41, 0x41, 0x41, 0x22} // 43 C
    ,{0x7F, 0x41, 0x41, 0x22, 0x1C} // 44 D
    ,{0x7F, 0x49, 0x49, 0x49, 0x41} // 45 E
    ,{0x7F, 0x09, 0x09, 0x09, 0x01} // 46 F
    ,{0x3E, 0x41, 0x49, 0x49, 0x7A} // 47 G
    ,{0x7F, 0x08, 0x08, 0x08, 0x7F} // 48 H
    ,{0x00, 0x41, 0x7F, 0x41, 0x00} // 49 I
    ,{0x20, 0x40, 0x41, 0x3F, 0x01} // 4a J
    ,{0x7F, 0x08, 0x14, 0x22, 0x41} // 4b K
    ,{0x7F, 0x40, 0x40, 0x40, 0x40} // 4c L
    ,{0x7F, 0x02, 0x0C, 0x02, 0x7F} // 4d M
    ,{0x7F, 0x04, 0x08, 0x10, 0x7F} // 4e N
    ,{0x3E, 0x41, 0x41, 0x41, 0x3E} // 4f O
    ,{0x7F, 0x09, 0x09, 0x09, 0x06} // 50 P
    ,{0x3E, 0x41, 0x51, 0x21, 0x5E} // 51 Q
    ,{0x7F, 0x09, 0x19, 0x29, 0x46} // 52 R
    ,{0x46, 0x49, 0x49, 0x49, 0x31} // 53 S
    ,{0x01, 0x01, 0x7F, 0x01, 0x01} // 54 T
    ,{0x3F, 0x40, 0x40, 0x40, 0x3F} // 55 U
    ,{0x1F, 0x20, 0x40, 0x20, 0x1F} // 56 V
    ,{0x3F, 0x40, 0x38, 0x40, 0x3F} // 57 W
    ,{0x63, 0x14, 0x08, 0x14, 0x63} // 58 X
    ,{0x07, 0x08, 0x70, 0x08, 0x07} // 59 Y
    ,{0x61, 0x51, 0x49, 0x45, 0x43} // 5a Z
    ,{0x00, 0x7F, 0x41, 0x41, 0x00} // 5b [
    ,{0x02, 0x04, 0x08, 0x10, 0x20} // 5c ?
    ,{0x00, 0x41, 0x41, 0x7F, 0x00} // 5d ]
    ,{0x04, 0x02, 0x01, 0x02, 0x04} // 5e ^
    ,{0x40, 0x40, 0x40, 0x40, 0x40} // 5f _
    ,{0x00, 0x01, 0x02, 0x04, 0x00} // 60 `
    ,{0x20, 0x54, 0x54, 0x54, 0x78} // 61 a
    ,{0x7F, 0x48, 0x44, 0x44, 0x38} // 62 b
    ,{0x38, 0x44, 0x44, 0x44, 0x20} // 63 c
    ,{0x38, 0x44, 0x44, 0x48, 0x7F} // 64 d
    ,{0x38, 0x54, 0x54, 0x54, 0x18} // 65 e
    ,{0x08, 0x7E, 0x09, 0x01, 0x02} // 66 f
    ,{0x0C, 0x52, 0x52, 0x52, 0x3E} // 67 g
    ,{0x7F, 0x08, 0x04, 0x04, 0x78} // 68 h
    ,{0x00, 0x44, 0x7D, 0x40, 0x00} // 69 i
    ,{0x20, 0x40, 0x44, 0x3D, 0x00} // 6a j
    ,{0x7F, 0x10, 0x28, 0x44, 0x00} // 6b k
    ,{0x00, 0x41, 0x7F, 0x40, 0x00} // 6c l
    ,{0x7C, 0x04, 0x18, 0x04, 0x78} // 6d m
    ,{0x7C, 0x08, 0x04, 0x04, 0x78} // 6e n
    ,{0x38, 0x44, 0x44, 0x44, 0x38} // 6f o
    ,{0x7C, 0x14, 0x14, 0x14, 0x08} // 70 p
    ,{0x08, 0x14, 0x14, 0x18, 0x7C} // 71 q
    ,{0x7C, 0x08, 0x04, 0x04, 0x08} // 72 r
    ,{0x48, 0x54, 0x54, 0x54, 0x20} // 73 s
    ,{0x04, 0x3F, 0x44, 0x40, 0x20} // 74 t
    ,{0x3C, 0x40, 0x40, 0x20, 0x7C} // 75 u
    ,{0x1C, 0x20, 0x40, 0x20, 0x1C} // 76 v
    ,{0x3C, 0x40, 0x30, 0x40, 0x3C} // 77 w
    ,{0x44, 0x28, 0x10, 0x28, 0x44} // 78 x
    ,{0x0C, 0x50, 0x50, 0x50, 0x3C} // 79 y
    ,{0x44, 0x64, 0x54, 0x4C, 0x44} // 7a z
    ,{0x00, 0x08, 0x36, 0x41, 0x00} // 7b {
    ,{0x00, 0x00, 0x7F, 0x00, 0x00} // 7c |
    ,{0x00, 0x41, 0x36, 0x08, 0x00} // 7d }
    ,{0x10, 0x08, 0x08, 0x10, 0x08} // 7e ?
    ,{0x78, 0x46, 0x41, 0x46, 0x78} // 7f ?
};








